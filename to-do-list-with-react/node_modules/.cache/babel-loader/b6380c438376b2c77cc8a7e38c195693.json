{"ast":null,"code":"var _jsxFileName = \"/home/amt/Desktop/ToDoListReact/to-do-list-with-react/src/components/ListTasks.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass ListTasks extends React.Component {\n  constructor() {\n    super();\n\n    this.deleteTask = index => {\n      let tempList = [];\n      tempList = this.props.list;\n      tempList.splice(index, 1);\n      this.props.deleteTask(tempList);\n    };\n\n    this.updateTask = index => {\n      let tempList = [];\n      tempList = this.props.list;\n      tempList[index].done = !tempList[index].done;\n      this.props.updateTask(tempList);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, this.props.list.map((e, idx) => {\n      let isDone = e.done ? \"crossed\" : '';\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        className: isDone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onClick: () => this.updateTask(idx),\n        type: \"checkBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 62\n        }\n      }), e.nameTask, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.deleteTask(idx),\n        className: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }\n      }, \"X\"));\n    }));\n  }\n\n}\n\nexport default ListTasks;","map":{"version":3,"sources":["/home/amt/Desktop/ToDoListReact/to-do-list-with-react/src/components/ListTasks.js"],"names":["React","ReactDOM","ListTasks","Component","constructor","deleteTask","index","tempList","props","list","splice","updateTask","done","render","map","e","idx","isDone","nameTask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAuC;AACrCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAIbC,UAJa,GAICC,KAAD,IAAW;AACtB,UAAIC,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACAF,MAAAA,QAAQ,CAACG,MAAT,CAAgBJ,KAAhB,EAAsB,CAAtB;AACA,WAAKE,KAAL,CAAWH,UAAX,CAAsBE,QAAtB;AACD,KATY;;AAAA,SAYbI,UAZa,GAYCL,KAAD,IAAW;AACtB,UAAIC,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBM,IAAhB,GAAuB,CAACL,QAAQ,CAACD,KAAD,CAAR,CAAgBM,IAAxC;AACA,WAAKJ,KAAL,CAAWG,UAAX,CAAsBJ,QAAtB;AACD,KAjBY;AAGZ;;AAgBDM,EAAAA,MAAM,GAAE;AACN,wBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoB,CAACC,CAAD,EAAGC,GAAH,KAAa;AAC/B,UAAIC,MAAM,GAAGF,CAAC,CAACH,IAAF,GAAS,SAAT,GAAqB,EAAlC;AACA,0BAAQ;AAAI,QAAA,GAAG,EAAEI,GAAT;AAAc,QAAA,SAAS,EAAEC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiC;AAAO,QAAA,OAAO,EAAI,MAAM,KAAKN,UAAL,CAAgBK,GAAhB,CAAxB;AAA8C,QAAA,IAAI,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjC,EAAiGD,CAAC,CAACG,QAAnG,eACI;AAAM,QAAA,OAAO,EAAI,MAAM,KAAKb,UAAL,CAAgBW,GAAhB,CAAvB;AAA8C,QAAA,SAAS,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAAR;AAGO,KALT,CAHH,CAAX;AAWD;;AAhCoC;;AAkCvC,eAAed,SAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass ListTasks extends React.Component{\n  constructor(){\n    super();\n\n  }\n  deleteTask = (index) => {\n    let tempList = [];\n    tempList = this.props.list;\n    tempList.splice(index,1)\n    this.props.deleteTask(tempList);\n  }\n\n\n  updateTask = (index) => {\n    let tempList = [];\n    tempList = this.props.list;\n    tempList[index].done = !tempList[index].done ;\n    this.props.updateTask(tempList);\n  }\n\n  render(){\n    return     <ul>\n                {\n\n                  this.props.list.map((e,idx) =>   {\n                    let isDone = e.done ? \"crossed\" : '';\n                    return (<li key={idx} className={isDone}><input onClick = {() => this.updateTask(idx)} type='checkBox'/>{e.nameTask}\n                                <span onClick = {() => this.deleteTask(idx)}  className='delete'>X</span>\n                            </li>)\n                          })\n                }\n              </ul>\n  }\n}\nexport default ListTasks;\n"]},"metadata":{},"sourceType":"module"}